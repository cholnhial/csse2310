#ifndef UTILS_H
#define UTILS_H_

/* Represents a single node of the linked list */
typedef struct LinkedListNode LinkedListNode;
struct LinkedListNode {
    void* item;
    LinkedListNode* next;
    LinkedListNode* previous;
};

/* Represents the linked list with head and size */
typedef struct {
    LinkedListNode* head;
    int size;
} LinkedList;

/**
 *
 * Creates a new empty linked list 
 * 
 * Returns: A new linked list to be responsibly freed later
 **/
LinkedList* linked_list_new(void);

/**
 *   Adds a new item to the list
 *
 *   Parameters:
 *      list - the linked list to add the new item to
 *      item - the item to be added
 *
 *      
 *  Returns: A pointer to the list that was just added to
 * */
LinkedList* linked_list_add_item(LinkedList* list, void* item);

/**
 *   Adds a new string to the list in a sorted fashion
 *
 *   Parameters:
 *      list - the linked list to add the new item to
 *      str - the string to alphabetically add to the list
 *  
 *  NOTES: used https://www.geeksforgeeks.org/insert-value-sorted-way-sorted-doubly-linked-list/ as a reference
 * 
 *  Returns: A pointer to the list that was just added to
 * */
LinkedList* linked_list_add_item_sorted_s(LinkedList* list, char* str);



/**
 * Removes an item from the list
 *
 * Parameters:
 *  list - the list to remove the item from
 *  item - the pointer to the item to be removed
 *
 *  Returns: A pointer to the list that had the item removed from
 **/
LinkedList* linked_list_remove_item(LinkedList* list, void* item);

/**
 * A debugging method to print all the elements of a list.
 * Parameters:
 *  list - the list to print 
 *  stream - the output stream to print to
 *  formatString - the format string for how to format the items
 * 
 * Returns: None
 * */
void linked_list_print(LinkedList* list, FILE* stream, char* formatString);

/**
 *  Frees the pointer to the list.
 *  Note any memory allocated to the items is not freed.
 *  
 *  Parameters:
 *      list - the list to free
 *
 *  Returns: None
 * */
void linked_list_free(LinkedList* list);

#endif // UTILS_H_
